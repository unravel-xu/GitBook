{"./":{"url":"./","title":"介绍","keywords":"","body":" EvaristeXu的第一本GitBook 为什么要使用GitBook GitBook简介 开源工具链 GitBook.com 其他文档 EvaristeXu的第一本GitBook 这是我个人的第一本GitBook，用于介绍GitBook的配置使用，章节设置可能存在不合理。 为什么要使用GitBook 介绍下我折腾GitBook的背景，目前有许多平台包括个人搭建网站来记录博客非常方便，但是如果写系列文章，翻阅以及查找只有通过归档功能，阅读体验并不理想。 GitBook简介 Gitbook 是基于Node.js的命令行工具，用来创建漂亮的电子书，它使用Markdown或AsciiDoc语法来撰写内容，用Git进行版本控制，且可以托管在Github上。Gitbook 可以将作品编译成网站、PDF、ePub 和 MOBI 等多重格式。 开源工具链 这个工具链 (GitBook) 是一个使用 Git 和 Markdown 来构建书籍的工具。它可以将你的书输出很多格式：PDF，ePub，mobi，或者输出为静态网页。 GitBook工具链是开源并且完全免费的，它的源码可以在 GitHub 上获取。 与格式和工具链相关的问题被发表在github.com/GitbookIO/gitbook/issues。 GitBook.com GitBook.com 是一个使用工具链来创建和托管书籍的在线平台(www.gitbook.com)。 其他文档 开发文档 (API & 插件) 地址 developer.gitbook.com。 企业版本的安装向导和手册的地址 hep.enterprise.gitbook.com。 Copyright © evariste.xu@gmail.com 2021 all right reserved，powered by Gitbook该文章修订时间： 2021-10-01 10:19:11 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"Chapter1/":{"url":"Chapter1/","title":"安装","keywords":"","body":"章节介绍 本章将介绍如何安装GitBook以及所需环境，个人的安装环境是win11，Linux安装过程类似，可参考其他博客 Copyright © evariste.xu@gmail.com 2021 all right reserved，powered by Gitbook该文章修订时间： 2021-10-01 10:32:55 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"Chapter1/Node.js安装.html":{"url":"Chapter1/Node.js安装.html","title":"node.js安装","keywords":"","body":" 参考文章 简单介绍： 官方下载： 修改镜像源 Node.js安装 参考文章 win10下安装node.js的步骤 简单介绍： Node.js 是一个开源与跨平台的 JavaScript 运行时环境。 它是一个可用于几乎任何项目的流行工具。 官方下载： https://nodejs.org/zh-cn/download/ 根据配置选择下载并安装，如果为使用GitBook首次下载，推荐下载10.21.0版本 安装后可以在进入cmd输入node -v进行验证，结果应该会显示出安装的node.js版本号 修改镜像源 如果是国内用户建议修改镜像源 npm config set registry https://registry.npm.taobao.org 查看修改结果 npm config list Copyright © evariste.xu@gmail.com 2021 all right reserved，powered by Gitbook该文章修订时间： 2021-10-01 10:56:00 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"Chapter1/GitBook安装.html":{"url":"Chapter1/GitBook安装.html","title":"GitBook安装","keywords":"","body":" 参考文章 安装 卸载 初始化 安装GitBook 参考文章 GitBook文档(中文版) GitBook使用入门 基于GitBook搭建个人博客 新版gitbook+github+Typora使用方法（个人认为typora的markdown写作体验原优于vscode） 安装 npm install gitbook-cli -g 安装完成后，使用如下命令检验，如果是第一次使用，gitbook-cli将自动安装gitbook，安装时间视网络情况而定 gitbook -V 如果出现报错，没关系当时我也遇了，查了查大概是如下原因： node版本不匹配，不建议卸载原环境降版本，推荐的解决方法是使用nvm版本管理，测试的匹配组合是： CLI version : 2.3.2 GitBook version : 3.2.3 node: 10.21.0 推荐参考链接： win10安装nvm踩坑实录 nvm使用切换环境 卸载 使用如下命令卸载gitbook-cli： npm uninstall gitbook-cli-g 初始化 选择一个要放置GitBook的文件夹，然后在这个文件夹中打开命令行输入命令： gitbook init 该命令会初始化项目，如果你有git基础，那么就容易明白了 初始化后，你会发现该文件夹中自动多出了两个文件 README.md：用于介绍该GitBook，会固定在目录顶部 SUMMARY.md：该GitBook的目录，左侧栏显示出章节 注意：这两个文件是项目所必须的，如何编辑将在使用中介绍 Copyright © evariste.xu@gmail.com 2021 all right reserved，powered by Gitbook该文章修订时间： 2021-10-01 10:28:34 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"Chapter2/":{"url":"Chapter2/","title":"使用","keywords":"","body":" 章节介绍 章节介绍 本章节将简单介绍如何使用GitBook Copyright © evariste.xu@gmail.com 2021 all right reserved，powered by Gitbook该文章修订时间： 2021-10-01 11:03:04 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"Chapter2/preview.html":{"url":"Chapter2/preview.html","title":"预览","keywords":"","body":" 预览 预览 当你写好了章节内容需要预览效果时，可以采用如下方式： 方式一： gitbook serve (--port 端口号) gitbook会默认启动本机4000端口用于预览，可指定启用的端口 方式二： gitbook build [GitBook路径] [输出路径] 默认会在根文件夹_book文件夹中生成.html静态文件，该文件夹中包含了书籍的所有html文件，可以将该文件夹部署到个人服务器上 Copyright © evariste.xu@gmail.com 2021 all right reserved，powered by Gitbook该文章修订时间： 2021-10-01 10:42:11 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"Chapter2/common.html":{"url":"Chapter2/common.html","title":"常用命令","keywords":"","body":" 常用命令 常用命令 以下命令都可以通过shell或者cmd来执行 通过gitbook -V命令查看是否安装成功。 命令()内的部分表示一般省略 通过npm安装 npm install gitbook-cli -g 初始化 新建一个文件夹，例如新建 mygitbook ，然后在该目录下执行命令： gitbook init 会自动生成两个必要的文件README.md和SUMMARY.md 预览 执行命令： gitbook serve (./{book_name}) gitbook会启动一个4000端口用于预览，可以在浏览器打开网址： http://localhost:4000 预览效果。 编译 执行命令： gitbook build (./{book_name} --output=./{outputFolder}) 运行该命令后会在根文件夹生成一个_book文件夹，包含了书籍的所有 html 文件。可以使用该命令来生成网页而不开启服务器，也可以将_book文件夹部署到服务器上。 Copyright © evariste.xu@gmail.com 2021 all right reserved，powered by Gitbook该文章修订时间： 2021-10-01 10:41:12 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"Chapter2/cmd.html":{"url":"Chapter2/cmd.html","title":"GitBook命令","keywords":"","body":" GitBook命令 GitBook命令 这里将介绍GitBook的一些命令 输出gitbook的帮助信息 gitbook --help 输出gitbook-cli的帮助信息 gitbook help 生成静态网页并运行服务器 gitbook serve 生成静态网页 gitbook build 生成静态网页时指定gitbook的版本，如果本地没有将先下载 gitbook build --gitbook=3.2.3 列出所有的gitbook版本 gitbook ls 列出远程可用的gitbook版本 gitbook ls-remote 更新到gitbook的最新版本 gitbook update 卸载对应的gitbook版本 gitbook uninstall 3.2.3 安装依赖 gitbook install 指定log的级别 gitbook build --log=debug 输出错误信息 gitbook builid --debug Copyright © evariste.xu@gmail.com 2021 all right reserved，powered by Gitbook该文章修订时间： 2021-10-01 10:40:43 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"Chapter2/write.html":{"url":"Chapter2/write.html","title":"相关文件编写","keywords":"","body":" 相关文件编写 README.md文件编写 SUMMARY.md文件编写 相关文件编写 README.md文件编写 使用Markdown编写介绍内容 在每个目录中都会有一个README.md文件用于描述该章节的说明 SUMMARY.md文件编写 如下所示： # Summary * [xxx](README.md) * [xxx](xxx/README.md) * [xxx](xxx/xxx.md) * [xxx](xxx/xxx.md) * [xxx](end/README.md) SUMMARY.md基本上是列表加链接的语法。链接中可以使用目录，也可以使用了链接，通过缩进表示目录章节层次结构。 可以先在SUMMARY.md中预先定义好所有文件结构，然后输入gitbook init命令，会自动创建定义文件结构中的文件 Copyright © evariste.xu@gmail.com 2021 all right reserved，powered by Gitbook该文章修订时间： 2021-10-01 10:39:49 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"Chapter3/":{"url":"Chapter3/","title":"插件","keywords":"","body":" 章节介绍 章节介绍 本章将简单介绍如何自定义个人项目配置以及安装GitBook插件 Copyright © evariste.xu@gmail.com 2021 all right reserved，powered by Gitbook该文章修订时间： 2021-10-01 11:04:19 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"Chapter3/json.html":{"url":"Chapter3/json.html","title":"配置文件","keywords":"","body":" 配置文件 配置文件创建 参数说明 root structure title author description direction gitbook language links styles 默认插件包括 配置文件 配置文件创建 在项目的根目录创建book.json文件，与SUMMARY.md同级，创建后自定义参数，下面将会对参数进行说明 参数说明 GitBook的官方说明 变量 描述 root 包含所有图书文件的根文件夹的路径，除了 book.json structure 指定自述文件，摘要，词汇表等的路径，参考 Structure paragraph title 您的书名，默认值是从 README 中提取出来的。在 GitBook.com 上，这个字段是预填的。 description 您的书籍的描述，默认值是从 README 中提取出来的。在 GitBook.com 上，这个字段是预填的。 author 作者名。在GitBook.com上，这个字段是预填的。 isbn 国际标准书号 ISBN language 本书的语言类型 —— ISO code 。默认值是 en direction 文本阅读顺序。可以是 rtl （从右向左）或 ltr （从左向右），默认值依赖于 language gitbook 应该使用的GitBook版本。使用 SemVer 规范，并接受类似于 “> = 3.0.0” 的条件。 links 在左侧导航栏添加链接信息 plugins 要加载的插件列表 pluginsConfig 插件的配置 root 包含所有图书文件的根文件夹的路径， book.json 文件除外。 例： \"root\" : \"./docs\", structure 指定 Readme、Summary、Glossary 和 Languages 对应的文件名。 title 电子书的书名，默认值是从 README 中提取出来的。在 GitBook.com 上，这个字段是预先填写的。 例： \"title\" : \"gitbook-notes\", author 作者姓名，在GitBook.com上，这个字段是预先填写的。 例： \"author\" : \"victor zhang\" description 电子书的描述，默认值是从 README 中提取出来的。在GitBook.com上，这个字段是预先填写的。 \"description\" : \"Gitbook 教程\" direction 文本的方向。可以是 rtl 或 ltr，默认值取决于语言的值。 \"direction\" : \"ltr\" gitbook 应该使用的GitBook版本。使用SemVer规范，接受类似于 >=3.0.0 的条件。 \"gitbook\" : \"3.0.0\", \"gitbook\" : \">=3.0.0\" language Gitbook使用的语言, 版本2.6.4中可选的语言如下： en, ar, bn, cs, de, en, es, fa, fi, fr, he, it, ja, ko, no, pl, pt, ro, ru, sv, uk, vi, zh-hans, zh-tw 例： \"language\" : \"zh-hans\", links 在左侧导航栏添加链接信息 例： \"links\" : { \"sidebar\" : { \"Home\" : \"https://github.com/dunwu/gitbook-notes\" } } styles 自定义页面样式， 默认情况下各generator对应的css文件 例： \"styles\": { \"website\": \"styles/website.css\", \"ebook\": \"styles/ebook.css\", \"pdf\": \"styles/pdf.css\", \"mobi\": \"styles/mobi.css\", \"epub\": \"styles/epub.css\" } 例如要使 h1、h2 标签有下边框， 可以在 website.css 中设置 h1 , h2{ border-bottom: 1px solid #EFEAEA; } 默认插件包括 highlight - 语法高亮插件 search - 搜索插件，不支持中文 sharing - 分享插件，对应页面右上角的分享功能 font-settings - 字体设置插件 livereload - 热加载插件 特别说明：系统自带插件可通过在插件名前加-的方式删除，如修改为-sharing 在添加或删除了插件后要加载使用插件，需要执行gitbook install命令来更新项目配置 插件需要先要在book.json文件里面plugins中才能生效，如果只是安装了插件，而没配置的话是不会生效的。 tips：gitbook install命令安装慢，而且是全部插件都安装一遍，网络环境不佳可能需要等待很长时间安装不下来，如果只安装一个插件的话建议使用NPM命令安装，之前介绍了如何修改npm的源，可以使用 npm install gitbook-plugin-插件名的方式进行安装。 Copyright © evariste.xu@gmail.com 2021 all right reserved，powered by Gitbook该文章修订时间： 2021-10-01 12:14:29 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"Chapter3/plugin.html":{"url":"Chapter3/plugin.html","title":"插件安装","keywords":"","body":" 插件安装 插件安装 支持插件有许多，这里强烈推荐四篇文章 常用插件0 常用插件1 常用插件2 常用插件3 关于插件的安装按照个人喜好，这里也不推荐了 Copyright © evariste.xu@gmail.com 2021 all right reserved，powered by Gitbook该文章修订时间： 2021-10-01 13:27:17 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"},"end/":{"url":"end/","title":"结束","keywords":"","body":" 结语 结语 最后如何发布写好的GitBook，可以参考打造完美的写作系统 这是个人首次编写GitBook，写的比较简略，包括如何部署到自己的ECS上，绑定自己的域名等都没有介绍。期间参考了许多前人大佬的笔记，非常感谢大佬们的无私分享！ Copyright © evariste.xu@gmail.com 2021 all right reserved，powered by Gitbook该文章修订时间： 2021-10-01 20:34:49 console.log(\"plugin-popup....\");document.onclick = function(e){ e.target.tagName === \"IMG\" && window.open(e.target.src,e.target.src)}img{cursor:pointer}"}}